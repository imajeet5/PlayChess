[{"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\index.tsx":"1","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\App.tsx":"2","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\connection\\socket.ts":"3","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\pages\\WelcomePage.tsx":"4","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\pages\\HomePage.tsx":"5","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\contexts\\SocketContext.tsx":"6","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\InputForm.tsx":"7","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\JoinRoom.tsx":"8","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\UserWaiting.tsx":"9","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui\\Lobby.tsx":"10"},{"size":256,"mtime":1608279263510,"results":"11","hashOfConfig":"12"},{"size":767,"mtime":1608303648825,"results":"13","hashOfConfig":"12"},{"size":552,"mtime":1608302864167,"results":"14","hashOfConfig":"12"},{"size":1979,"mtime":1608375320401,"results":"15","hashOfConfig":"12"},{"size":1703,"mtime":1608364628107,"results":"16","hashOfConfig":"12"},{"size":1030,"mtime":1608364184114,"results":"17","hashOfConfig":"12"},{"size":1478,"mtime":1608375744903,"results":"18","hashOfConfig":"12"},{"size":1463,"mtime":1608374881810,"results":"19","hashOfConfig":"12"},{"size":946,"mtime":1608374739210,"results":"20","hashOfConfig":"12"},{"size":346,"mtime":1608375327096,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dt7vwq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\index.tsx",[],["46","47"],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\App.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\connection\\socket.ts",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\pages\\WelcomePage.tsx",["48","49"],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\pages\\HomePage.tsx",["50","51"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SocketContext } from '../../contexts/SocketContext';\r\nimport InputForm from '../ui-shared/InputForm';\r\nimport uuid from 'uuid/dist/v4';\r\n\r\nexport default function HomePage() {\r\n  const { socket, socketId, username, setUsername } = useContext(SocketContext);\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n  // const [username, setUsername] = useState('');\r\n  const history = useHistory();\r\n\r\n  // when game is created we will send the user to /game/:gameId route to wait for other user to connect\r\n  useEffect(() => {\r\n    socket.on('gameCreated', (data: { gameId: string; socketId: string }) => {\r\n      history.push(`/game/${data.gameId}`);\r\n    });\r\n\r\n    // when the component un-mount we will stop listening to the event\r\n    return () => {\r\n      socket.off('gameCreated');\r\n    };\r\n  }, []);\r\n\r\n  // we will connect to the socket when the user submit the form\r\n  const handleSubmit = (e, value) => {\r\n    e.preventDefault();\r\n    if (socket.connected) {\r\n      socket.close();\r\n    }\r\n    socket.open();\r\n    setUsername(value);\r\n    setIsFormSubmitted(true);\r\n  };\r\n\r\n  // then when the socket id is available we and the form is submitted\r\n  useEffect(() => {\r\n    if (socketId && isFormSubmitted) {\r\n      const newGameRoomId = uuid();\r\n      socket.emit('createNewGame', newGameRoomId);\r\n\r\n      setIsFormSubmitted(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketId, isFormSubmitted]);\r\n\r\n  return (\r\n    <div>\r\n      <InputForm username={username} handleSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n}\r\n","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\contexts\\SocketContext.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\InputForm.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\JoinRoom.tsx",["52"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { SocketContext } from '../../contexts/SocketContext';\r\nimport InputForm from './InputForm';\r\n\r\n// this component is used for the user who want to connect to the existing game\r\nexport default function JoinRoom({ gameId, isCreator, setOpponentUserName }) {\r\n  const { socket, socketId, username, setUsername } = useContext(SocketContext);\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n\r\n  const handleSubmit = (e, value) => {\r\n    e.preventDefault();\r\n\r\n    if (socket.connected) {\r\n      socket.close();\r\n    }\r\n    socket.open();\r\n    setUsername(value);\r\n    setIsFormSubmitted(true);\r\n  };\r\n\r\n  // when we receive the opponent game data we will start the game\r\n  useEffect(() => {\r\n    socket.on('creatorGameData', (oppName) => {\r\n      setOpponentUserName(oppName);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socketId && isFormSubmitted) {\r\n      const userGameData = {\r\n        gameId,\r\n        username,\r\n      };\r\n      socket.emit('joinGame', userGameData);\r\n\r\n      setIsFormSubmitted(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketId, isFormSubmitted]);\r\n  const success = <h1>Hi {username}, Please wait while we connect...</h1>;\r\n\r\n  return (\r\n    <div>\r\n      {socketId ? (\r\n        success\r\n      ) : (\r\n        <InputForm username={username} handleSubmit={handleSubmit} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\UserWaiting.tsx",["53"],"import React, { useEffect } from 'react';\r\n\r\nexport default function UserWaiting({\r\n  username,\r\n  socket,\r\n  setOpponentUserName,\r\n  gameId,\r\n}) {\r\n  useEffect(() => {\r\n    socket.on('oppGameData', (oppName) => {\r\n      console.log('Opponent has joined the game', oppName);\r\n      console.log('We can start the game now');\r\n      // we will sent the current username (gameCreator) to the socket server so that, opponent get the user name\r\n      const creatorData = {\r\n        gameId: gameId,\r\n        username,\r\n      };\r\n      socket.emit('gameCreatorData', creatorData);\r\n\r\n      setOpponentUserName(oppName);\r\n    });\r\n    socket.on('error', (data) => {\r\n      console.error('Something went wrong', data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('startGame');\r\n      socket.off('error');\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1>Welcome {username}</h1>\r\n      <h3>Your Socket id is {socket.id}</h3>\r\n    </div>\r\n  );\r\n}\r\n","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui\\Lobby.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":13,"column":21,"nodeType":"60","messageId":"61","endLine":13,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":24,"column":6,"nodeType":"64","endLine":24,"endColumn":8,"suggestions":"65"},{"ruleId":"58","severity":1,"message":"66","line":1,"column":40,"nodeType":"60","messageId":"61","endLine":1,"endColumn":46},{"ruleId":"62","severity":1,"message":"67","line":23,"column":6,"nodeType":"64","endLine":23,"endColumn":8,"suggestions":"68"},{"ruleId":"62","severity":1,"message":"69","line":26,"column":6,"nodeType":"64","endLine":26,"endColumn":8,"suggestions":"70"},{"ruleId":"62","severity":1,"message":"71","line":30,"column":6,"nodeType":"64","endLine":30,"endColumn":8,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'setIsCreator' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["75"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'socket'. Either include them or remove the dependency array.",["76"],"React Hook useEffect has missing dependencies: 'setOpponentUserName' and 'socket'. Either include them or remove the dependency array. If 'setOpponentUserName' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["77"],"React Hook useEffect has missing dependencies: 'gameId', 'setOpponentUserName', 'socket', and 'username'. Either include them or remove the dependency array. If 'setOpponentUserName' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [socket]",{"range":"87","text":"88"},"Update the dependencies array to be: [history, socket]",{"range":"89","text":"90"},"Update the dependencies array to be: [setOpponentUserName, socket]",{"range":"91","text":"92"},"Update the dependencies array to be: [gameId, setOpponentUserName, socket, username]",{"range":"93","text":"94"},[1059,1061],"[socket]",[944,946],"[history, socket]",[878,880],"[setOpponentUserName, socket]",[815,817],"[gameId, setOpponentUserName, socket, username]"]