[{"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\index.tsx":"1","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\App.tsx":"2","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\connection\\socket.ts":"3","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\pages\\WelcomePage.tsx":"4","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\pages\\HomePage.tsx":"5","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\contexts\\SocketContext.tsx":"6","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\InputForm.tsx":"7","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\JoinRoom.tsx":"8","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\UserWaiting.tsx":"9","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\Lobby.tsx":"10","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\ui\\chessgame.tsx":"11","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\ui\\piecemap.tsx":"12","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\ui\\piece.tsx":"13","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\model\\square.ts":"14","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\model\\chess.ts":"15","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\model\\chesspiece.ts":"16"},{"size":256,"mtime":1608279263510,"results":"17","hashOfConfig":"18"},{"size":767,"mtime":1608303648825,"results":"19","hashOfConfig":"18"},{"size":552,"mtime":1608302864167,"results":"20","hashOfConfig":"18"},{"size":1713,"mtime":1608380396136,"results":"21","hashOfConfig":"18"},{"size":1703,"mtime":1608364628107,"results":"22","hashOfConfig":"18"},{"size":1030,"mtime":1608364184114,"results":"23","hashOfConfig":"18"},{"size":1090,"mtime":1608375882285,"results":"24","hashOfConfig":"18"},{"size":2055,"mtime":1608393085683,"results":"25","hashOfConfig":"18"},{"size":2680,"mtime":1608392647428,"results":"26","hashOfConfig":"18"},{"size":887,"mtime":1608396418884,"results":"27","hashOfConfig":"18"},{"size":8265,"mtime":1608397676335,"results":"28","hashOfConfig":"18"},{"size":1050,"mtime":1608390292747,"results":"29","hashOfConfig":"18"},{"size":1256,"mtime":1608390202736,"results":"30","hashOfConfig":"18"},{"size":1837,"mtime":1608397665112,"results":"31","hashOfConfig":"18"},{"size":10776,"mtime":1608396863882,"results":"32","hashOfConfig":"18"},{"size":1126,"mtime":1608397407482,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1dt7vwq",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\index.tsx",[],["72","73"],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\App.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\connection\\socket.ts",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\pages\\WelcomePage.tsx",["74"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { SocketContext } from '../../contexts/SocketContext';\r\nimport JoinRoom from '../ui-shared/JoinRoom';\r\nimport UserWaiting from '../ui-shared/UserWaiting';\r\nimport Lobby from '../ui-shared/Lobby';\r\n\r\n// Either it a new user waiting to join the existing game or new user (creator) waiting for opponent\r\nexport default function WelcomePage() {\r\n  const { socket, socketId, username } = useContext(SocketContext);\r\n  const { gameId } = useParams<{ gameId: string }>();\r\n  // if socketId exist then user is the creator of the game\r\n  const [isCreator] = useState(socketId ? true : false);\r\n  const [opponentUserName, setOpponentUserName] = useState(null);\r\n\r\n  const userWaiting = (\r\n    <React.Fragment>\r\n      <UserWaiting\r\n        socket={socket}\r\n        username={username}\r\n        setOpponentUserName={setOpponentUserName}\r\n        gameId={gameId}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n  const userWantToJoin = (\r\n    <React.Fragment>\r\n      <JoinRoom\r\n        gameId={gameId}\r\n        isCreator={false}\r\n        setOpponentUserName={setOpponentUserName}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n\r\n  const waitingJSX = isCreator ? userWaiting : userWantToJoin;\r\n\r\n  // if we got the opponent User name we will start the game, otherwise we will wait to get the opponent username\r\n  return (\r\n    <div>\r\n      {opponentUserName ? (\r\n        <Lobby\r\n          myUserName={username}\r\n          opponentUserName={opponentUserName}\r\n          isCreator={isCreator}\r\n          socket={socket} \r\n          gameId={gameId}\r\n        />\r\n      ) : (\r\n        waitingJSX\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\pages\\HomePage.tsx",["75","76"],"import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SocketContext } from '../../contexts/SocketContext';\r\nimport InputForm from '../ui-shared/InputForm';\r\nimport uuid from 'uuid/dist/v4';\r\n\r\nexport default function HomePage() {\r\n  const { socket, socketId, username, setUsername } = useContext(SocketContext);\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n  // const [username, setUsername] = useState('');\r\n  const history = useHistory();\r\n\r\n  // when game is created we will send the user to /game/:gameId route to wait for other user to connect\r\n  useEffect(() => {\r\n    socket.on('gameCreated', (data: { gameId: string; socketId: string }) => {\r\n      history.push(`/game/${data.gameId}`);\r\n    });\r\n\r\n    // when the component un-mount we will stop listening to the event\r\n    return () => {\r\n      socket.off('gameCreated');\r\n    };\r\n  }, []);\r\n\r\n  // we will connect to the socket when the user submit the form\r\n  const handleSubmit = (e, value) => {\r\n    e.preventDefault();\r\n    if (socket.connected) {\r\n      socket.close();\r\n    }\r\n    socket.open();\r\n    setUsername(value);\r\n    setIsFormSubmitted(true);\r\n  };\r\n\r\n  // then when the socket id is available we and the form is submitted\r\n  useEffect(() => {\r\n    if (socketId && isFormSubmitted) {\r\n      const newGameRoomId = uuid();\r\n      socket.emit('createNewGame', newGameRoomId);\r\n\r\n      setIsFormSubmitted(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketId, isFormSubmitted]);\r\n\r\n  return (\r\n    <div>\r\n      <InputForm username={username} handleSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n}\r\n","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\contexts\\SocketContext.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\InputForm.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\JoinRoom.tsx",["77","78"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SocketContext } from '../../contexts/SocketContext';\r\nimport InputForm from './InputForm';\r\n\r\n// this component is used for the user who want to connect to the existing game\r\nexport default function JoinRoom({ gameId, isCreator, setOpponentUserName }) {\r\n  const { socket, socketId, username, setUsername } = useContext(SocketContext);\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e, value) => {\r\n    e.preventDefault();\r\n\r\n    if (socket.connected) {\r\n      socket.close();\r\n    }\r\n    socket.open();\r\n    setUsername(value);\r\n    setIsFormSubmitted(true);\r\n  };\r\n\r\n  // when we receive the opponent game data we will start the game\r\n  useEffect(() => {\r\n    socket.on('creatorGameData', (oppName) => {\r\n      setOpponentUserName(oppName);\r\n    });\r\n    socket.on('error', (message) => {\r\n      setError(message);\r\n    });\r\n    return () => {\r\n      socket.off('creatorGameData');\r\n      socket.off('error');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setTimeout(() => {\r\n        setError('');\r\n        history.push('/');\r\n      }, 1500);\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (socketId && isFormSubmitted) {\r\n      const userGameData = {\r\n        gameId,\r\n        username,\r\n      };\r\n      socket.emit('joinGame', userGameData);\r\n\r\n      setIsFormSubmitted(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketId, isFormSubmitted]);\r\n  const success = <h1>Hi {username}, Please wait while we connect...</h1>;\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <h1>{error}</h1>\r\n        <p>Redirecting to home page...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {socketId ? (\r\n        success\r\n      ) : (\r\n        <InputForm username={username} handleSubmit={handleSubmit} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\UserWaiting.tsx",["79","80","81"],"import React, { TextareaHTMLAttributes, useEffect, useRef } from 'react';\r\nimport { Divider, Message } from 'semantic-ui-react';\r\n\r\nexport default function UserWaiting({\r\n  username,\r\n  socket,\r\n  setOpponentUserName,\r\n  gameId,\r\n}) {\r\n  const domainName = 'http://localhost:3001';\r\n  const inputRef = useRef<any>();\r\n  const copyText = () => {\r\n    inputRef.current.select();\r\n    document.execCommand('copy');\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('oppGameData', (oppName) => {\r\n      console.log('Opponent has joined the game', oppName);\r\n      console.log('We can start the game now');\r\n      // we will sent the current username (gameCreator) to the socket server so that, opponent get the user name\r\n      const creatorData = {\r\n        gameId: gameId,\r\n        username,\r\n      };\r\n      socket.emit('gameCreatorData', creatorData);\r\n\r\n      setOpponentUserName(oppName);\r\n    });\r\n    socket.on('error', (data) => {\r\n      console.error('Something went wrong', data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('startGame');\r\n      socket.off('error');\r\n    };\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n        marginTop: '30%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <h1>Welcome {username}</h1>\r\n      <div className=\"ui action input\">\r\n        <input\r\n          ref={inputRef}\r\n          readOnly={true}\r\n          type=\"text\"\r\n          value={domainName + '/game/' + gameId}\r\n          style={{ width: '500px' }}\r\n        />\r\n        <button\r\n          className=\"ui teal icon right labeled button\"\r\n          onClick={copyText}\r\n        >\r\n          <i aria-hidden=\"true\" className=\"copy icon\"></i>Copy\r\n        </button>\r\n      </div>\r\n      <Divider horizontal></Divider>\r\n      <div\r\n        className=\"ui large message\"\r\n        style={{ background: 'none', width: '400px' }}\r\n      >\r\n        Share the above link with your friend to play\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n *   <div className=\"ui action input\">\r\n        <input type=\"text\" value=\"http://ww.short.url/c0opq\" />\r\n        <button className=\"ui teal icon right labeled button\">\r\n          <i aria-hidden=\"true\" className=\"copy icon\"></i>Copy\r\n        </button>\r\n      </div>\r\n */\r\n\r\n/**\r\n  * <textarea\r\n        readOnly={true}\r\n        onFocus={(event) => {\r\n          console.log('sd');\r\n          event.target.select();\r\n        }}\r\n        ref={textAreaRef}\r\n        value={domainName + '/game/' + gameId}\r\n      ></textarea>{' '}\r\n      \r\n            <button className=\"btn\" style={{ marginTop: -21 }} onClick={copyText}>\r\n        Copy\r\n      </button>\r\n  */\r\n","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\ui-shared\\Lobby.tsx",["82"],"import React, { useEffect } from 'react';\r\nimport ChessGame from '../chess/ui/chessgame';\r\nimport chessMove from '../chess/assets/moveSoundEffect.mp3';\r\nimport useSound from 'use-sound';\r\nimport { Socket } from 'socket.io-client';\r\n\r\ninterface PropsType {\r\n  myUserName: string;\r\n  opponentUserName: string | null;\r\n  isCreator: boolean;\r\n  socket: typeof Socket;\r\n  gameId: string;\r\n}\r\n\r\nexport default function Lobby({\r\n  myUserName,\r\n  opponentUserName,\r\n  isCreator,\r\n  socket,\r\n  gameId,\r\n}: PropsType) {\r\n  // const play = () => {\r\n  //   console.log('Play audio ');\r\n  // };\r\n  const [play] = useSound(chessMove);\r\n  return (\r\n    <div>\r\n      <h1>\r\n        {' '}\r\n        {myUserName} vs {opponentUserName}\r\n      </h1>\r\n\r\n      <ChessGame\r\n        playAudio={play}\r\n        gameId={gameId}\r\n        isCreator={isCreator}\r\n        socket={socket}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\ui\\chessgame.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\ui\\piecemap.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\ui\\piece.tsx",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\model\\square.ts",[],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\model\\chess.ts",["83","84","85"],"D:\\OpenSourceLearningProjects\\chessGame-remake\\frontend\\src\\components\\chess\\model\\chesspiece.ts",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":29,"nodeType":"92","messageId":"93","endLine":1,"endColumn":38},{"ruleId":"90","severity":1,"message":"94","line":1,"column":40,"nodeType":"92","messageId":"93","endLine":1,"endColumn":46},{"ruleId":"95","severity":1,"message":"96","line":23,"column":6,"nodeType":"97","endLine":23,"endColumn":8,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":36,"column":6,"nodeType":"97","endLine":36,"endColumn":8,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"101","line":45,"column":6,"nodeType":"97","endLine":45,"endColumn":13,"suggestions":"102"},{"ruleId":"90","severity":1,"message":"103","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":39},{"ruleId":"90","severity":1,"message":"104","line":2,"column":19,"nodeType":"92","messageId":"93","endLine":2,"endColumn":26},{"ruleId":"95","severity":1,"message":"105","line":38,"column":6,"nodeType":"97","endLine":38,"endColumn":8,"suggestions":"106"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":300,"column":18,"nodeType":"92","messageId":"109","endLine":300,"endColumn":19},{"ruleId":"107","severity":1,"message":"110","line":301,"column":22,"nodeType":"92","messageId":"109","endLine":301,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":302,"column":23,"nodeType":"113","messageId":"114","endLine":302,"endColumn":25},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'setOpponentUserName' and 'socket'. Either include them or remove the dependency array. If 'setOpponentUserName' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["118"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["119"],"'TextareaHTMLAttributes' is defined but never used.","'Message' is defined but never used.","React Hook useEffect has missing dependencies: 'gameId', 'setOpponentUserName', 'socket', and 'username'. Either include them or remove the dependency array. If 'setOpponentUserName' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["120"],"@typescript-eslint/no-redeclare","'j' is already defined.","redeclared","'i' is already defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [history, socket]",{"range":"129","text":"130"},"Update the dependencies array to be: [setOpponentUserName, socket]",{"range":"131","text":"132"},"Update the dependencies array to be: [error, history]",{"range":"133","text":"134"},"Update the dependencies array to be: [gameId, setOpponentUserName, socket, username]",{"range":"135","text":"136"},[944,946],"[history, socket]",[1170,1172],"[setOpponentUserName, socket]",[1323,1330],"[error, history]",[1087,1089],"[gameId, setOpponentUserName, socket, username]"]